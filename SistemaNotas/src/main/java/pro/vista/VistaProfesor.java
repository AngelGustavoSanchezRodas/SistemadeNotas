/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pro.vista;

import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pro.dao.AsignaturasDAO;
import pro.dao.EstudiantesDAO;
import pro.entities.Asignaturas;

/**
 *
 * @author USER
 */
public class VistaProfesor extends javax.swing.JFrame {
    
    
    

    /**
     * Creates new form VistaProfesor
     */
    public VistaProfesor() {
        initComponents();
        configurarVentana();
        
    }
    
    private int idCatedratico;

    public VistaProfesor(int idCatedratico) {
        initComponents();
        configurarVentana();
        this.idCatedratico = idCatedratico;
        cargarCursosCatedratico(idCatedratico);
        setVisible(true); // Mostrar ventana
    }
    
     private void configurarVentana() {
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().setBackground(Color.WHITE); // fondo uniforme
        setFont(new Font("Segoe UI", Font.PLAIN, 14));
    }
     
     private void cargarCursosCatedratico(int idCatedratico) {
        new Thread(() -> {
            AsignaturasDAO dao = new AsignaturasDAO();
            // Cambiado a tu método existente
            List<Asignaturas> cursos = dao.buscarPorCatedratico(idCatedratico);

            javax.swing.SwingUtilities.invokeLater(() -> {
                DefaultTableModel modelo = (DefaultTableModel) jtCursos.getModel();
                modelo.setRowCount(0);

                if (cursos == null || cursos.isEmpty()) {
                    System.out.println("No se encontraron cursos para el catedrático con ID " + idCatedratico);
                    return;
                }

                for (Asignaturas curso : cursos) {
                    modelo.addRow(new Object[]{curso.getNombreAsignatura()});
                }
            });
        }).start();
    }
     
    private void cargarEstudiantesDelCurso(int idAsignatura) {
        EstudiantesDAO dao = new EstudiantesDAO();
        List<Object[]> estudiantes = dao.obtenerEstudiantesPorCurso(idAsignatura);

        DefaultTableModel modelo = (DefaultTableModel) jtEstudiantes.getModel();
        modelo.setRowCount(0); // limpiar tabla

        if (estudiantes == null || estudiantes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay estudiantes inscritos en este curso.");
            return;
        }

        for (Object[] fila : estudiantes) {
            modelo.addRow(fila);
        }
        }
    
    private void abrirFormularioNota(String nombreEstudiante) {
        // De momento solo mostramos un mensaje temporal o abrimos una ventana vacía
        JOptionPane.showMessageDialog(this, 
            "Abrir formulario para: " + nombreEstudiante, 
            "Editar Nota", 
            JOptionPane.INFORMATION_MESSAGE);
    }




     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtvistaPro = new javax.swing.JLabel();
        jpCrusos = new javax.swing.JPanel();
        jbCerrarSesion = new javax.swing.JButton();
        jscMenu = new javax.swing.JScrollPane();
        jtCursos = new javax.swing.JTable();
        jscContenido = new javax.swing.JScrollPane();
        jtEstudiantes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(13, 71, 161));

        txtvistaPro.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtvistaPro.setForeground(new java.awt.Color(255, 255, 255));

        jpCrusos.setBackground(new java.awt.Color(197, 134, 156));
        jpCrusos.setForeground(new java.awt.Color(197, 134, 156));

        jbCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Profesor.png"))); // NOI18N
        jbCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbCerrarSesionMouseClicked(evt);
            }
        });

        jtCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Cursos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCursosMouseClicked(evt);
            }
        });
        jscMenu.setViewportView(jtCursos);
        if (jtCursos.getColumnModel().getColumnCount() > 0) {
            jtCursos.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jpCrusosLayout = new javax.swing.GroupLayout(jpCrusos);
        jpCrusos.setLayout(jpCrusosLayout);
        jpCrusosLayout.setHorizontalGroup(
            jpCrusosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrusosLayout.createSequentialGroup()
                .addGroup(jpCrusosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpCrusosLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jbCerrarSesion))
                    .addGroup(jpCrusosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jscMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jpCrusosLayout.setVerticalGroup(
            jpCrusosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrusosLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jbCerrarSesion)
                .addGap(18, 18, 18)
                .addComponent(jscMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Estudiante", "Examen 1", "Examen 2", "Examen Final"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtEstudiantesMouseClicked(evt);
            }
        });
        jscContenido.setViewportView(jtEstudiantes);
        if (jtEstudiantes.getColumnModel().getColumnCount() > 0) {
            jtEstudiantes.getColumnModel().getColumn(0).setResizable(false);
            jtEstudiantes.getColumnModel().getColumn(1).setResizable(false);
            jtEstudiantes.getColumnModel().getColumn(2).setResizable(false);
            jtEstudiantes.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jpCrusos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jscContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtvistaPro)
                .addContainerGap(421, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpCrusos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscContenido)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtvistaPro)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCerrarSesionMouseClicked
        // Mostrar ventana de confirmación
    int opcion = javax.swing.JOptionPane.showConfirmDialog(
            this, 
            "¿Está seguro que desea cerrar sesión?", 
            "Confirmar salida", 
            javax.swing.JOptionPane.YES_NO_OPTION,
            javax.swing.JOptionPane.QUESTION_MESSAGE
    );

    // Si el usuario confirma, cerrar la ventana
    if (opcion == javax.swing.JOptionPane.YES_OPTION) {
        this.dispose(); // Cierra la ventana actual
    }
    }//GEN-LAST:event_jbCerrarSesionMouseClicked

    private void jtCursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCursosMouseClicked
        if (evt.getClickCount() == 2) {  // Doble clic
        int fila = jtCursos.getSelectedRow();
        if (fila == -1) return;

        String nombreCurso = jtCursos.getValueAt(fila, 0).toString();

        // Buscar el curso seleccionado y su ID
        AsignaturasDAO daoA = new AsignaturasDAO();
        List<Asignaturas> cursos = daoA.buscarPorCatedratico(idCatedratico);

        Asignaturas cursoSeleccionado = cursos.stream()
                .filter(c -> c.getNombreAsignatura().equals(nombreCurso))
                .findFirst()
                .orElse(null);

        if (cursoSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el curso seleccionado.");
            return;
        }

        // Cargar estudiantes del curso seleccionado
        cargarEstudiantesDelCurso(cursoSeleccionado.getIdAsignatura());
    }
    }//GEN-LAST:event_jtCursosMouseClicked

    private void jtEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtEstudiantesMouseClicked
       if (evt.getClickCount() == 2 && jtEstudiantes.getSelectedRow() != -1) {
        int fila = jtEstudiantes.getSelectedRow();

        // Obtener datos desde la tabla
        int idEstudiante;
        try {
            idEstudiante = Integer.parseInt(jtEstudiantes.getValueAt(fila, 0).toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID del estudiante no es válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String nombre = jtEstudiantes.getValueAt(fila, 1).toString();
        int idAsignatura = 1; // 🔹 Puedes cambiarlo si luego lo obtienes dinámicamente

        // Abrir el formulario
        FormularioNotas form = new FormularioNotas();
        form.setDatosEstudiante(idEstudiante, idAsignatura, nombre);
        form.setLocationRelativeTo(this); // Centrar el formulario
        form.setVisible(true);
        
        this.dispose(); // opcional: cierra la ventana actual
    } 
    }//GEN-LAST:event_jtEstudiantesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaProfesor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbCerrarSesion;
    private javax.swing.JPanel jpCrusos;
    private javax.swing.JScrollPane jscContenido;
    private javax.swing.JScrollPane jscMenu;
    private javax.swing.JTable jtCursos;
    private javax.swing.JTable jtEstudiantes;
    private javax.swing.JLabel txtvistaPro;
    // End of variables declaration//GEN-END:variables

    
}
